#!/usr/bin/env php
<?php

/**
 * This file is part of the fabschurt/scripts package.
 *
 * (c) 2015 Fabien Schurter <dev@fabschurt.net>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 *
 * @author    Fabien Schurter <dev@fabschurt.net>
 * @license   MIT
 * @copyright 2015 Fabien Schurter
 */

/**
 * Scans `$current_dir` and its subdirs, and creates `.gitkeep` files in empty
 * dirs.
 *
 * @param string $current_dir
 */
function scan_dirs($current_dir)
{
    if (!is_dir($current_dir) || !is_readable($current_dir)) {
        return;
    }

    $subdir_paths = array_diff(scandir($current_dir), array('.', '..'));

    // Create a .gitkeep file in the current directory if it is empty…
    if (!count($subdir_paths) && is_writable($current_dir)) {
        $current_gitkeep_path = "{$current_dir}/.gitkeep";
        if (touch($current_gitkeep_path)) {
            echo "Touch: {$current_gitkeep_path}\n";
        } else {
            echo "Error: {$current_gitkeep_path}\n";
        }
    // …and if not, traverse through its children
    } else {
        foreach ($subdir_paths as $subdir_path) {
            $subdir_path = "{$current_dir}/{$subdir_path}";
            if (is_dir($subdir_path) && is_readable($subdir_path)) {
                scan_dirs($subdir_path);
            }
        }
    }
}

// Check arguments
if ($argc != 2 || !is_dir($argv[1]) || !is_readable($argv[1])) {
    exit("You must specify a valid (existing and readable) directory path as single argument.\n");
}

// Run
scan_dirs($argv[1]);
